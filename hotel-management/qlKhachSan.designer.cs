#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace hotel_management
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="DataQLKS")]
	public partial class qlKhachSanDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertAccount(Account instance);
    partial void UpdateAccount(Account instance);
    partial void DeleteAccount(Account instance);
    partial void InsertBill(Bill instance);
    partial void UpdateBill(Bill instance);
    partial void DeleteBill(Bill instance);
    partial void InsertBill_Equipment(Bill_Equipment instance);
    partial void UpdateBill_Equipment(Bill_Equipment instance);
    partial void DeleteBill_Equipment(Bill_Equipment instance);
    partial void InsertBill_Service(Bill_Service instance);
    partial void UpdateBill_Service(Bill_Service instance);
    partial void DeleteBill_Service(Bill_Service instance);
    partial void InsertBookRoom(BookRoom instance);
    partial void UpdateBookRoom(BookRoom instance);
    partial void DeleteBookRoom(BookRoom instance);
    partial void InsertCustomer(Customer instance);
    partial void UpdateCustomer(Customer instance);
    partial void DeleteCustomer(Customer instance);
    partial void InsertEquipment(Equipment instance);
    partial void UpdateEquipment(Equipment instance);
    partial void DeleteEquipment(Equipment instance);
    partial void InsertManager(Manager instance);
    partial void UpdateManager(Manager instance);
    partial void DeleteManager(Manager instance);
    partial void InsertRoom(Room instance);
    partial void UpdateRoom(Room instance);
    partial void DeleteRoom(Room instance);
    partial void InsertRoomStyle(RoomStyle instance);
    partial void UpdateRoomStyle(RoomStyle instance);
    partial void DeleteRoomStyle(RoomStyle instance);
    partial void InsertRoomStyle_Equipment(RoomStyle_Equipment instance);
    partial void UpdateRoomStyle_Equipment(RoomStyle_Equipment instance);
    partial void DeleteRoomStyle_Equipment(RoomStyle_Equipment instance);
    partial void InsertRoomStyle_Service(RoomStyle_Service instance);
    partial void UpdateRoomStyle_Service(RoomStyle_Service instance);
    partial void DeleteRoomStyle_Service(RoomStyle_Service instance);
    partial void InsertService(Service instance);
    partial void UpdateService(Service instance);
    partial void DeleteService(Service instance);
    partial void InsertServiceStyle(ServiceStyle instance);
    partial void UpdateServiceStyle(ServiceStyle instance);
    partial void DeleteServiceStyle(ServiceStyle instance);
    partial void InsertStaff(Staff instance);
    partial void UpdateStaff(Staff instance);
    partial void DeleteStaff(Staff instance);
    #endregion
		
		public qlKhachSanDataContext() : 
				base(global::hotel_management.Properties.Settings.Default.DataQLKSConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public qlKhachSanDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlKhachSanDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlKhachSanDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public qlKhachSanDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Account> Accounts
		{
			get
			{
				return this.GetTable<Account>();
			}
		}
		
		public System.Data.Linq.Table<Bill> Bills
		{
			get
			{
				return this.GetTable<Bill>();
			}
		}
		
		public System.Data.Linq.Table<Bill_Equipment> Bill_Equipments
		{
			get
			{
				return this.GetTable<Bill_Equipment>();
			}
		}
		
		public System.Data.Linq.Table<Bill_Service> Bill_Services
		{
			get
			{
				return this.GetTable<Bill_Service>();
			}
		}
		
		public System.Data.Linq.Table<BookRoom> BookRooms
		{
			get
			{
				return this.GetTable<BookRoom>();
			}
		}
		
		public System.Data.Linq.Table<Customer> Customers
		{
			get
			{
				return this.GetTable<Customer>();
			}
		}
		
		public System.Data.Linq.Table<Equipment> Equipments
		{
			get
			{
				return this.GetTable<Equipment>();
			}
		}
		
		public System.Data.Linq.Table<Manager> Managers
		{
			get
			{
				return this.GetTable<Manager>();
			}
		}
		
		public System.Data.Linq.Table<Room> Rooms
		{
			get
			{
				return this.GetTable<Room>();
			}
		}
		
		public System.Data.Linq.Table<RoomStyle> RoomStyles
		{
			get
			{
				return this.GetTable<RoomStyle>();
			}
		}
		
		public System.Data.Linq.Table<RoomStyle_Equipment> RoomStyle_Equipments
		{
			get
			{
				return this.GetTable<RoomStyle_Equipment>();
			}
		}
		
		public System.Data.Linq.Table<RoomStyle_Service> RoomStyle_Services
		{
			get
			{
				return this.GetTable<RoomStyle_Service>();
			}
		}
		
		public System.Data.Linq.Table<Service> Services
		{
			get
			{
				return this.GetTable<Service>();
			}
		}
		
		public System.Data.Linq.Table<ServiceStyle> ServiceStyles
		{
			get
			{
				return this.GetTable<ServiceStyle>();
			}
		}
		
		public System.Data.Linq.Table<Staff> Staffs
		{
			get
			{
				return this.GetTable<Staff>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Account")]
	public partial class Account : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _username;
		
		private string _password;
		
		private EntityRef<Manager> _Manager;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnusernameChanging(string value);
    partial void OnusernameChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public Account()
		{
			this._Manager = default(EntityRef<Manager>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_username", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string username
		{
			get
			{
				return this._username;
			}
			set
			{
				if ((this._username != value))
				{
					this.OnusernameChanging(value);
					this.SendPropertyChanging();
					this._username = value;
					this.SendPropertyChanged("username");
					this.OnusernameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(8) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Manager", Storage="_Manager", ThisKey="username", OtherKey="id_Manager", IsUnique=true, IsForeignKey=false)]
		public Manager Manager
		{
			get
			{
				return this._Manager.Entity;
			}
			set
			{
				Manager previousValue = this._Manager.Entity;
				if (((previousValue != value) 
							|| (this._Manager.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Manager.Entity = null;
						previousValue.Account = null;
					}
					this._Manager.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("Manager");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Staff", Storage="_Staff", ThisKey="username", OtherKey="id_Staff", IsUnique=true, IsForeignKey=false)]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Account = null;
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Account = this;
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill")]
	public partial class Bill : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private System.Nullable<decimal> _TotalPrice;
		
		private System.Nullable<double> _Discount;
		
		private string _id_BookRoom;
		
		private string _id_Staff;
		
		private EntityRef<BookRoom> _BookRoom;
		
		private EntityRef<Staff> _Staff;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnTotalPriceChanging(System.Nullable<decimal> value);
    partial void OnTotalPriceChanged();
    partial void OnDiscountChanging(System.Nullable<double> value);
    partial void OnDiscountChanged();
    partial void Onid_BookRoomChanging(string value);
    partial void Onid_BookRoomChanged();
    partial void Onid_StaffChanging(string value);
    partial void Onid_StaffChanged();
    #endregion
		
		public Bill()
		{
			this._BookRoom = default(EntityRef<BookRoom>);
			this._Staff = default(EntityRef<Staff>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TotalPrice", DbType="Money")]
		public System.Nullable<decimal> TotalPrice
		{
			get
			{
				return this._TotalPrice;
			}
			set
			{
				if ((this._TotalPrice != value))
				{
					this.OnTotalPriceChanging(value);
					this.SendPropertyChanging();
					this._TotalPrice = value;
					this.SendPropertyChanged("TotalPrice");
					this.OnTotalPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Discount", DbType="Float")]
		public System.Nullable<double> Discount
		{
			get
			{
				return this._Discount;
			}
			set
			{
				if ((this._Discount != value))
				{
					this.OnDiscountChanging(value);
					this.SendPropertyChanging();
					this._Discount = value;
					this.SendPropertyChanged("Discount");
					this.OnDiscountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookRoom", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_BookRoom
		{
			get
			{
				return this._id_BookRoom;
			}
			set
			{
				if ((this._id_BookRoom != value))
				{
					if (this._BookRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookRoomChanging(value);
					this.SendPropertyChanging();
					this._id_BookRoom = value;
					this.SendPropertyChanged("id_BookRoom");
					this.Onid_BookRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Staff", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string id_Staff
		{
			get
			{
				return this._id_Staff;
			}
			set
			{
				if ((this._id_Staff != value))
				{
					if (this._Staff.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_StaffChanging(value);
					this.SendPropertyChanging();
					this._id_Staff = value;
					this.SendPropertyChanged("id_Staff");
					this.Onid_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill", Storage="_BookRoom", ThisKey="id_BookRoom", OtherKey="id_BookRoom", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookRoom BookRoom
		{
			get
			{
				return this._BookRoom.Entity;
			}
			set
			{
				BookRoom previousValue = this._BookRoom.Entity;
				if (((previousValue != value) 
							|| (this._BookRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookRoom.Entity = null;
						previousValue.Bill = null;
					}
					this._BookRoom.Entity = value;
					if ((value != null))
					{
						value.Bill = this;
						this._id_BookRoom = value.id_BookRoom;
					}
					else
					{
						this._id_BookRoom = default(string);
					}
					this.SendPropertyChanged("BookRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Staff", ThisKey="id_Staff", OtherKey="id_Staff", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Staff Staff
		{
			get
			{
				return this._Staff.Entity;
			}
			set
			{
				Staff previousValue = this._Staff.Entity;
				if (((previousValue != value) 
							|| (this._Staff.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Staff.Entity = null;
						previousValue.Bills.Remove(this);
					}
					this._Staff.Entity = value;
					if ((value != null))
					{
						value.Bills.Add(this);
						this._id_Staff = value.id_Staff;
					}
					else
					{
						this._id_Staff = default(string);
					}
					this.SendPropertyChanged("Staff");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_Equipment")]
	public partial class Bill_Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_BookRoom;
		
		private string _id_Equipment;
		
		private int _Equipment_Count;
		
		private EntityRef<BookRoom> _BookRoom;
		
		private EntityRef<Equipment> _Equipment;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BookRoomChanging(string value);
    partial void Onid_BookRoomChanged();
    partial void Onid_EquipmentChanging(string value);
    partial void Onid_EquipmentChanged();
    partial void OnEquipment_CountChanging(int value);
    partial void OnEquipment_CountChanged();
    #endregion
		
		public Bill_Equipment()
		{
			this._BookRoom = default(EntityRef<BookRoom>);
			this._Equipment = default(EntityRef<Equipment>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookRoom", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_BookRoom
		{
			get
			{
				return this._id_BookRoom;
			}
			set
			{
				if ((this._id_BookRoom != value))
				{
					if (this._BookRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookRoomChanging(value);
					this.SendPropertyChanging();
					this._id_BookRoom = value;
					this.SendPropertyChanged("id_BookRoom");
					this.Onid_BookRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Equipment", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Equipment
		{
			get
			{
				return this._id_Equipment;
			}
			set
			{
				if ((this._id_Equipment != value))
				{
					if (this._Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_EquipmentChanging(value);
					this.SendPropertyChanging();
					this._id_Equipment = value;
					this.SendPropertyChanged("id_Equipment");
					this.Onid_EquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment_Count", DbType="Int NOT NULL")]
		public int Equipment_Count
		{
			get
			{
				return this._Equipment_Count;
			}
			set
			{
				if ((this._Equipment_Count != value))
				{
					this.OnEquipment_CountChanging(value);
					this.SendPropertyChanging();
					this._Equipment_Count = value;
					this.SendPropertyChanged("Equipment_Count");
					this.OnEquipment_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill_Equipment", Storage="_BookRoom", ThisKey="id_BookRoom", OtherKey="id_BookRoom", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookRoom BookRoom
		{
			get
			{
				return this._BookRoom.Entity;
			}
			set
			{
				BookRoom previousValue = this._BookRoom.Entity;
				if (((previousValue != value) 
							|| (this._BookRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookRoom.Entity = null;
						previousValue.Bill_Equipments.Remove(this);
					}
					this._BookRoom.Entity = value;
					if ((value != null))
					{
						value.Bill_Equipments.Add(this);
						this._id_BookRoom = value.id_BookRoom;
					}
					else
					{
						this._id_BookRoom = default(string);
					}
					this.SendPropertyChanged("BookRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Bill_Equipment", Storage="_Equipment", ThisKey="id_Equipment", OtherKey="id_Equipment", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.Bill_Equipments.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.Bill_Equipments.Add(this);
						this._id_Equipment = value.id_Equipment;
					}
					else
					{
						this._id_Equipment = default(string);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Bill_Service")]
	public partial class Bill_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_BookRoom;
		
		private string _id_Service;
		
		private int _Service_Count;
		
		private EntityRef<BookRoom> _BookRoom;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BookRoomChanging(string value);
    partial void Onid_BookRoomChanged();
    partial void Onid_ServiceChanging(string value);
    partial void Onid_ServiceChanged();
    partial void OnService_CountChanging(int value);
    partial void OnService_CountChanged();
    #endregion
		
		public Bill_Service()
		{
			this._BookRoom = default(EntityRef<BookRoom>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookRoom", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_BookRoom
		{
			get
			{
				return this._id_BookRoom;
			}
			set
			{
				if ((this._id_BookRoom != value))
				{
					if (this._BookRoom.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_BookRoomChanging(value);
					this.SendPropertyChanging();
					this._id_BookRoom = value;
					this.SendPropertyChanged("id_BookRoom");
					this.Onid_BookRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Service", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Service
		{
			get
			{
				return this._id_Service;
			}
			set
			{
				if ((this._id_Service != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ServiceChanging(value);
					this.SendPropertyChanging();
					this._id_Service = value;
					this.SendPropertyChanged("id_Service");
					this.Onid_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Count", DbType="Int NOT NULL")]
		public int Service_Count
		{
			get
			{
				return this._Service_Count;
			}
			set
			{
				if ((this._Service_Count != value))
				{
					this.OnService_CountChanging(value);
					this.SendPropertyChanging();
					this._Service_Count = value;
					this.SendPropertyChanged("Service_Count");
					this.OnService_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill_Service", Storage="_BookRoom", ThisKey="id_BookRoom", OtherKey="id_BookRoom", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public BookRoom BookRoom
		{
			get
			{
				return this._BookRoom.Entity;
			}
			set
			{
				BookRoom previousValue = this._BookRoom.Entity;
				if (((previousValue != value) 
							|| (this._BookRoom.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._BookRoom.Entity = null;
						previousValue.Bill_Services.Remove(this);
					}
					this._BookRoom.Entity = value;
					if ((value != null))
					{
						value.Bill_Services.Add(this);
						this._id_BookRoom = value.id_BookRoom;
					}
					else
					{
						this._id_BookRoom = default(string);
					}
					this.SendPropertyChanged("BookRoom");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Bill_Service", Storage="_Service", ThisKey="id_Service", OtherKey="id_Service", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.Bill_Services.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.Bill_Services.Add(this);
						this._id_Service = value.id_Service;
					}
					else
					{
						this._id_Service = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BookRoom")]
	public partial class BookRoom : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_BookRoom;
		
		private int _peopleCount;
		
		private System.DateTime _dateBooking;
		
		private System.DateTime _Checkin_Date;
		
		private System.DateTime _Checkout_Date;
		
		private string _id_Room;
		
		private string _id_Customer;
		
		private EntityRef<Bill> _Bill;
		
		private EntitySet<Bill_Equipment> _Bill_Equipments;
		
		private EntitySet<Bill_Service> _Bill_Services;
		
		private EntityRef<Customer> _Customer;
		
		private EntityRef<Room> _Room;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_BookRoomChanging(string value);
    partial void Onid_BookRoomChanged();
    partial void OnpeopleCountChanging(int value);
    partial void OnpeopleCountChanged();
    partial void OndateBookingChanging(System.DateTime value);
    partial void OndateBookingChanged();
    partial void OnCheckin_DateChanging(System.DateTime value);
    partial void OnCheckin_DateChanged();
    partial void OnCheckout_DateChanging(System.DateTime value);
    partial void OnCheckout_DateChanged();
    partial void Onid_RoomChanging(string value);
    partial void Onid_RoomChanged();
    partial void Onid_CustomerChanging(string value);
    partial void Onid_CustomerChanged();
    #endregion
		
		public BookRoom()
		{
			this._Bill = default(EntityRef<Bill>);
			this._Bill_Equipments = new EntitySet<Bill_Equipment>(new Action<Bill_Equipment>(this.attach_Bill_Equipments), new Action<Bill_Equipment>(this.detach_Bill_Equipments));
			this._Bill_Services = new EntitySet<Bill_Service>(new Action<Bill_Service>(this.attach_Bill_Services), new Action<Bill_Service>(this.detach_Bill_Services));
			this._Customer = default(EntityRef<Customer>);
			this._Room = default(EntityRef<Room>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_BookRoom", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_BookRoom
		{
			get
			{
				return this._id_BookRoom;
			}
			set
			{
				if ((this._id_BookRoom != value))
				{
					this.Onid_BookRoomChanging(value);
					this.SendPropertyChanging();
					this._id_BookRoom = value;
					this.SendPropertyChanged("id_BookRoom");
					this.Onid_BookRoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_peopleCount", DbType="Int NOT NULL")]
		public int peopleCount
		{
			get
			{
				return this._peopleCount;
			}
			set
			{
				if ((this._peopleCount != value))
				{
					this.OnpeopleCountChanging(value);
					this.SendPropertyChanging();
					this._peopleCount = value;
					this.SendPropertyChanged("peopleCount");
					this.OnpeopleCountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dateBooking", DbType="Date NOT NULL")]
		public System.DateTime dateBooking
		{
			get
			{
				return this._dateBooking;
			}
			set
			{
				if ((this._dateBooking != value))
				{
					this.OndateBookingChanging(value);
					this.SendPropertyChanging();
					this._dateBooking = value;
					this.SendPropertyChanged("dateBooking");
					this.OndateBookingChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checkin_Date", DbType="Date NOT NULL")]
		public System.DateTime Checkin_Date
		{
			get
			{
				return this._Checkin_Date;
			}
			set
			{
				if ((this._Checkin_Date != value))
				{
					this.OnCheckin_DateChanging(value);
					this.SendPropertyChanging();
					this._Checkin_Date = value;
					this.SendPropertyChanged("Checkin_Date");
					this.OnCheckin_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Checkout_Date", DbType="Date NOT NULL")]
		public System.DateTime Checkout_Date
		{
			get
			{
				return this._Checkout_Date;
			}
			set
			{
				if ((this._Checkout_Date != value))
				{
					this.OnCheckout_DateChanging(value);
					this.SendPropertyChanging();
					this._Checkout_Date = value;
					this.SendPropertyChanged("Checkout_Date");
					this.OnCheckout_DateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Room", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string id_Room
		{
			get
			{
				return this._id_Room;
			}
			set
			{
				if ((this._id_Room != value))
				{
					if (this._Room.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RoomChanging(value);
					this.SendPropertyChanging();
					this._id_Room = value;
					this.SendPropertyChanged("id_Room");
					this.Onid_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Customer", DbType="VarChar(12) NOT NULL", CanBeNull=false)]
		public string id_Customer
		{
			get
			{
				return this._id_Customer;
			}
			set
			{
				if ((this._id_Customer != value))
				{
					if (this._Customer.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_CustomerChanging(value);
					this.SendPropertyChanging();
					this._id_Customer = value;
					this.SendPropertyChanged("id_Customer");
					this.Onid_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill", Storage="_Bill", ThisKey="id_BookRoom", OtherKey="id_BookRoom", IsUnique=true, IsForeignKey=false)]
		public Bill Bill
		{
			get
			{
				return this._Bill.Entity;
			}
			set
			{
				Bill previousValue = this._Bill.Entity;
				if (((previousValue != value) 
							|| (this._Bill.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Bill.Entity = null;
						previousValue.BookRoom = null;
					}
					this._Bill.Entity = value;
					if ((value != null))
					{
						value.BookRoom = this;
					}
					this.SendPropertyChanged("Bill");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill_Equipment", Storage="_Bill_Equipments", ThisKey="id_BookRoom", OtherKey="id_BookRoom")]
		public EntitySet<Bill_Equipment> Bill_Equipments
		{
			get
			{
				return this._Bill_Equipments;
			}
			set
			{
				this._Bill_Equipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="BookRoom_Bill_Service", Storage="_Bill_Services", ThisKey="id_BookRoom", OtherKey="id_BookRoom")]
		public EntitySet<Bill_Service> Bill_Services
		{
			get
			{
				return this._Bill_Services;
			}
			set
			{
				this._Bill_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BookRoom", Storage="_Customer", ThisKey="id_Customer", OtherKey="id_Customer", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Customer Customer
		{
			get
			{
				return this._Customer.Entity;
			}
			set
			{
				Customer previousValue = this._Customer.Entity;
				if (((previousValue != value) 
							|| (this._Customer.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Customer.Entity = null;
						previousValue.BookRooms.Remove(this);
					}
					this._Customer.Entity = value;
					if ((value != null))
					{
						value.BookRooms.Add(this);
						this._id_Customer = value.id_Customer;
					}
					else
					{
						this._id_Customer = default(string);
					}
					this.SendPropertyChanged("Customer");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_BookRoom", Storage="_Room", ThisKey="id_Room", OtherKey="id_Room", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Room Room
		{
			get
			{
				return this._Room.Entity;
			}
			set
			{
				Room previousValue = this._Room.Entity;
				if (((previousValue != value) 
							|| (this._Room.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Room.Entity = null;
						previousValue.BookRooms.Remove(this);
					}
					this._Room.Entity = value;
					if ((value != null))
					{
						value.BookRooms.Add(this);
						this._id_Room = value.id_Room;
					}
					else
					{
						this._id_Room = default(string);
					}
					this.SendPropertyChanged("Room");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bill_Equipments(Bill_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.BookRoom = this;
		}
		
		private void detach_Bill_Equipments(Bill_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.BookRoom = null;
		}
		
		private void attach_Bill_Services(Bill_Service entity)
		{
			this.SendPropertyChanging();
			entity.BookRoom = this;
		}
		
		private void detach_Bill_Services(Bill_Service entity)
		{
			this.SendPropertyChanging();
			entity.BookRoom = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Customer")]
	public partial class Customer : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Customer;
		
		private string _name;
		
		private string _sex;
		
		private System.DateTime _birthday;
		
		private string _address;
		
		private string _phone;
		
		private EntitySet<BookRoom> _BookRooms;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_CustomerChanging(string value);
    partial void Onid_CustomerChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    #endregion
		
		public Customer()
		{
			this._BookRooms = new EntitySet<BookRoom>(new Action<BookRoom>(this.attach_BookRooms), new Action<BookRoom>(this.detach_BookRooms));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Customer", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Customer
		{
			get
			{
				return this._id_Customer;
			}
			set
			{
				if ((this._id_Customer != value))
				{
					this.Onid_CustomerChanging(value);
					this.SendPropertyChanging();
					this._id_Customer = value;
					this.SendPropertyChanged("id_Customer");
					this.Onid_CustomerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Customer_BookRoom", Storage="_BookRooms", ThisKey="id_Customer", OtherKey="id_Customer")]
		public EntitySet<BookRoom> BookRooms
		{
			get
			{
				return this._BookRooms;
			}
			set
			{
				this._BookRooms.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookRooms(BookRoom entity)
		{
			this.SendPropertyChanging();
			entity.Customer = this;
		}
		
		private void detach_BookRooms(BookRoom entity)
		{
			this.SendPropertyChanging();
			entity.Customer = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Equipment")]
	public partial class Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Equipment;
		
		private string _name_Equipment;
		
		private System.Nullable<decimal> _Price;
		
		private EntitySet<Bill_Equipment> _Bill_Equipments;
		
		private EntitySet<RoomStyle_Equipment> _RoomStyle_Equipments;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_EquipmentChanging(string value);
    partial void Onid_EquipmentChanged();
    partial void Onname_EquipmentChanging(string value);
    partial void Onname_EquipmentChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public Equipment()
		{
			this._Bill_Equipments = new EntitySet<Bill_Equipment>(new Action<Bill_Equipment>(this.attach_Bill_Equipments), new Action<Bill_Equipment>(this.detach_Bill_Equipments));
			this._RoomStyle_Equipments = new EntitySet<RoomStyle_Equipment>(new Action<RoomStyle_Equipment>(this.attach_RoomStyle_Equipments), new Action<RoomStyle_Equipment>(this.detach_RoomStyle_Equipments));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Equipment", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Equipment
		{
			get
			{
				return this._id_Equipment;
			}
			set
			{
				if ((this._id_Equipment != value))
				{
					this.Onid_EquipmentChanging(value);
					this.SendPropertyChanging();
					this._id_Equipment = value;
					this.SendPropertyChanged("id_Equipment");
					this.Onid_EquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_Equipment", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string name_Equipment
		{
			get
			{
				return this._name_Equipment;
			}
			set
			{
				if ((this._name_Equipment != value))
				{
					this.Onname_EquipmentChanging(value);
					this.SendPropertyChanging();
					this._name_Equipment = value;
					this.SendPropertyChanged("name_Equipment");
					this.Onname_EquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_Bill_Equipment", Storage="_Bill_Equipments", ThisKey="id_Equipment", OtherKey="id_Equipment")]
		public EntitySet<Bill_Equipment> Bill_Equipments
		{
			get
			{
				return this._Bill_Equipments;
			}
			set
			{
				this._Bill_Equipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_RoomStyle_Equipment", Storage="_RoomStyle_Equipments", ThisKey="id_Equipment", OtherKey="id_Equipment")]
		public EntitySet<RoomStyle_Equipment> RoomStyle_Equipments
		{
			get
			{
				return this._RoomStyle_Equipments;
			}
			set
			{
				this._RoomStyle_Equipments.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bill_Equipments(Bill_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_Bill_Equipments(Bill_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
		
		private void attach_RoomStyle_Equipments(RoomStyle_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = this;
		}
		
		private void detach_RoomStyle_Equipments(RoomStyle_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.Equipment = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Manager")]
	public partial class Manager : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Manager;
		
		private string _name;
		
		private string _sex;
		
		private System.DateTime _birthday;
		
		private string _address;
		
		private string _phone;
		
		private string _avartar_img;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ManagerChanging(string value);
    partial void Onid_ManagerChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onavartar_imgChanging(string value);
    partial void Onavartar_imgChanged();
    #endregion
		
		public Manager()
		{
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Manager", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Manager
		{
			get
			{
				return this._id_Manager;
			}
			set
			{
				if ((this._id_Manager != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ManagerChanging(value);
					this.SendPropertyChanging();
					this._id_Manager = value;
					this.SendPropertyChanged("id_Manager");
					this.Onid_ManagerChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avartar_img", DbType="VarChar(50)")]
		public string avartar_img
		{
			get
			{
				return this._avartar_img;
			}
			set
			{
				if ((this._avartar_img != value))
				{
					this.Onavartar_imgChanging(value);
					this.SendPropertyChanging();
					this._avartar_img = value;
					this.SendPropertyChanged("avartar_img");
					this.Onavartar_imgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Manager", Storage="_Account", ThisKey="id_Manager", OtherKey="username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Manager = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Manager = this;
						this._id_Manager = value.username;
					}
					else
					{
						this._id_Manager = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Room")]
	public partial class Room : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Room;
		
		private string _RoomNumber;
		
		private string _Grade;
		
		private bool _Status;
		
		private string _Note;
		
		private string _id_RoomStyle;
		
		private EntitySet<BookRoom> _BookRooms;
		
		private EntityRef<RoomStyle> _RoomStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RoomChanging(string value);
    partial void Onid_RoomChanged();
    partial void OnRoomNumberChanging(string value);
    partial void OnRoomNumberChanged();
    partial void OnGradeChanging(string value);
    partial void OnGradeChanged();
    partial void OnStatusChanging(bool value);
    partial void OnStatusChanged();
    partial void OnNoteChanging(string value);
    partial void OnNoteChanged();
    partial void Onid_RoomStyleChanging(string value);
    partial void Onid_RoomStyleChanged();
    #endregion
		
		public Room()
		{
			this._BookRooms = new EntitySet<BookRoom>(new Action<BookRoom>(this.attach_BookRooms), new Action<BookRoom>(this.detach_BookRooms));
			this._RoomStyle = default(EntityRef<RoomStyle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Room", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Room
		{
			get
			{
				return this._id_Room;
			}
			set
			{
				if ((this._id_Room != value))
				{
					this.Onid_RoomChanging(value);
					this.SendPropertyChanging();
					this._id_Room = value;
					this.SendPropertyChanged("id_Room");
					this.Onid_RoomChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RoomNumber", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string RoomNumber
		{
			get
			{
				return this._RoomNumber;
			}
			set
			{
				if ((this._RoomNumber != value))
				{
					this.OnRoomNumberChanging(value);
					this.SendPropertyChanging();
					this._RoomNumber = value;
					this.SendPropertyChanged("RoomNumber");
					this.OnRoomNumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Grade", DbType="VarChar(5) NOT NULL", CanBeNull=false)]
		public string Grade
		{
			get
			{
				return this._Grade;
			}
			set
			{
				if ((this._Grade != value))
				{
					this.OnGradeChanging(value);
					this.SendPropertyChanging();
					this._Grade = value;
					this.SendPropertyChanged("Grade");
					this.OnGradeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Bit NOT NULL")]
		public bool Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Note", DbType="VarChar(20)")]
		public string Note
		{
			get
			{
				return this._Note;
			}
			set
			{
				if ((this._Note != value))
				{
					this.OnNoteChanging(value);
					this.SendPropertyChanging();
					this._Note = value;
					this.SendPropertyChanged("Note");
					this.OnNoteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_RoomStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string id_RoomStyle
		{
			get
			{
				return this._id_RoomStyle;
			}
			set
			{
				if ((this._id_RoomStyle != value))
				{
					if (this._RoomStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RoomStyleChanging(value);
					this.SendPropertyChanging();
					this._id_RoomStyle = value;
					this.SendPropertyChanged("id_RoomStyle");
					this.Onid_RoomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Room_BookRoom", Storage="_BookRooms", ThisKey="id_Room", OtherKey="id_Room")]
		public EntitySet<BookRoom> BookRooms
		{
			get
			{
				return this._BookRooms;
			}
			set
			{
				this._BookRooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_Room", Storage="_RoomStyle", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoomStyle RoomStyle
		{
			get
			{
				return this._RoomStyle.Entity;
			}
			set
			{
				RoomStyle previousValue = this._RoomStyle.Entity;
				if (((previousValue != value) 
							|| (this._RoomStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoomStyle.Entity = null;
						previousValue.Rooms.Remove(this);
					}
					this._RoomStyle.Entity = value;
					if ((value != null))
					{
						value.Rooms.Add(this);
						this._id_RoomStyle = value.id_RoomStyle;
					}
					else
					{
						this._id_RoomStyle = default(string);
					}
					this.SendPropertyChanged("RoomStyle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BookRooms(BookRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = this;
		}
		
		private void detach_BookRooms(BookRoom entity)
		{
			this.SendPropertyChanging();
			entity.Room = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomStyle")]
	public partial class RoomStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_RoomStyle;
		
		private string _NameStyle;
		
		private System.Nullable<decimal> _Price;
		
		private EntitySet<Room> _Rooms;
		
		private EntitySet<RoomStyle_Equipment> _RoomStyle_Equipments;
		
		private EntitySet<RoomStyle_Service> _RoomStyle_Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RoomStyleChanging(string value);
    partial void Onid_RoomStyleChanged();
    partial void OnNameStyleChanging(string value);
    partial void OnNameStyleChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public RoomStyle()
		{
			this._Rooms = new EntitySet<Room>(new Action<Room>(this.attach_Rooms), new Action<Room>(this.detach_Rooms));
			this._RoomStyle_Equipments = new EntitySet<RoomStyle_Equipment>(new Action<RoomStyle_Equipment>(this.attach_RoomStyle_Equipments), new Action<RoomStyle_Equipment>(this.detach_RoomStyle_Equipments));
			this._RoomStyle_Services = new EntitySet<RoomStyle_Service>(new Action<RoomStyle_Service>(this.attach_RoomStyle_Services), new Action<RoomStyle_Service>(this.detach_RoomStyle_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_RoomStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_RoomStyle
		{
			get
			{
				return this._id_RoomStyle;
			}
			set
			{
				if ((this._id_RoomStyle != value))
				{
					this.Onid_RoomStyleChanging(value);
					this.SendPropertyChanging();
					this._id_RoomStyle = value;
					this.SendPropertyChanged("id_RoomStyle");
					this.Onid_RoomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_Room", Storage="_Rooms", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle")]
		public EntitySet<Room> Rooms
		{
			get
			{
				return this._Rooms;
			}
			set
			{
				this._Rooms.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_RoomStyle_Equipment", Storage="_RoomStyle_Equipments", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle")]
		public EntitySet<RoomStyle_Equipment> RoomStyle_Equipments
		{
			get
			{
				return this._RoomStyle_Equipments;
			}
			set
			{
				this._RoomStyle_Equipments.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_RoomStyle_Service", Storage="_RoomStyle_Services", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle")]
		public EntitySet<RoomStyle_Service> RoomStyle_Services
		{
			get
			{
				return this._RoomStyle_Services;
			}
			set
			{
				this._RoomStyle_Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = this;
		}
		
		private void detach_Rooms(Room entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = null;
		}
		
		private void attach_RoomStyle_Equipments(RoomStyle_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = this;
		}
		
		private void detach_RoomStyle_Equipments(RoomStyle_Equipment entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = null;
		}
		
		private void attach_RoomStyle_Services(RoomStyle_Service entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = this;
		}
		
		private void detach_RoomStyle_Services(RoomStyle_Service entity)
		{
			this.SendPropertyChanging();
			entity.RoomStyle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomStyle_Equipment")]
	public partial class RoomStyle_Equipment : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_RoomStyle;
		
		private string _id_Equipment;
		
		private System.Nullable<int> _Equipment_Count;
		
		private EntityRef<Equipment> _Equipment;
		
		private EntityRef<RoomStyle> _RoomStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RoomStyleChanging(string value);
    partial void Onid_RoomStyleChanged();
    partial void Onid_EquipmentChanging(string value);
    partial void Onid_EquipmentChanged();
    partial void OnEquipment_CountChanging(System.Nullable<int> value);
    partial void OnEquipment_CountChanged();
    #endregion
		
		public RoomStyle_Equipment()
		{
			this._Equipment = default(EntityRef<Equipment>);
			this._RoomStyle = default(EntityRef<RoomStyle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_RoomStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_RoomStyle
		{
			get
			{
				return this._id_RoomStyle;
			}
			set
			{
				if ((this._id_RoomStyle != value))
				{
					if (this._RoomStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RoomStyleChanging(value);
					this.SendPropertyChanging();
					this._id_RoomStyle = value;
					this.SendPropertyChanged("id_RoomStyle");
					this.Onid_RoomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Equipment", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Equipment
		{
			get
			{
				return this._id_Equipment;
			}
			set
			{
				if ((this._id_Equipment != value))
				{
					if (this._Equipment.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_EquipmentChanging(value);
					this.SendPropertyChanging();
					this._id_Equipment = value;
					this.SendPropertyChanged("id_Equipment");
					this.Onid_EquipmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Equipment_Count", DbType="Int")]
		public System.Nullable<int> Equipment_Count
		{
			get
			{
				return this._Equipment_Count;
			}
			set
			{
				if ((this._Equipment_Count != value))
				{
					this.OnEquipment_CountChanging(value);
					this.SendPropertyChanging();
					this._Equipment_Count = value;
					this.SendPropertyChanged("Equipment_Count");
					this.OnEquipment_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Equipment_RoomStyle_Equipment", Storage="_Equipment", ThisKey="id_Equipment", OtherKey="id_Equipment", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Equipment Equipment
		{
			get
			{
				return this._Equipment.Entity;
			}
			set
			{
				Equipment previousValue = this._Equipment.Entity;
				if (((previousValue != value) 
							|| (this._Equipment.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Equipment.Entity = null;
						previousValue.RoomStyle_Equipments.Remove(this);
					}
					this._Equipment.Entity = value;
					if ((value != null))
					{
						value.RoomStyle_Equipments.Add(this);
						this._id_Equipment = value.id_Equipment;
					}
					else
					{
						this._id_Equipment = default(string);
					}
					this.SendPropertyChanged("Equipment");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_RoomStyle_Equipment", Storage="_RoomStyle", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoomStyle RoomStyle
		{
			get
			{
				return this._RoomStyle.Entity;
			}
			set
			{
				RoomStyle previousValue = this._RoomStyle.Entity;
				if (((previousValue != value) 
							|| (this._RoomStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoomStyle.Entity = null;
						previousValue.RoomStyle_Equipments.Remove(this);
					}
					this._RoomStyle.Entity = value;
					if ((value != null))
					{
						value.RoomStyle_Equipments.Add(this);
						this._id_RoomStyle = value.id_RoomStyle;
					}
					else
					{
						this._id_RoomStyle = default(string);
					}
					this.SendPropertyChanged("RoomStyle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RoomStyle_Service")]
	public partial class RoomStyle_Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_RoomStyle;
		
		private string _id_Service;
		
		private int _Service_Count;
		
		private EntityRef<RoomStyle> _RoomStyle;
		
		private EntityRef<Service> _Service;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_RoomStyleChanging(string value);
    partial void Onid_RoomStyleChanged();
    partial void Onid_ServiceChanging(string value);
    partial void Onid_ServiceChanged();
    partial void OnService_CountChanging(int value);
    partial void OnService_CountChanged();
    #endregion
		
		public RoomStyle_Service()
		{
			this._RoomStyle = default(EntityRef<RoomStyle>);
			this._Service = default(EntityRef<Service>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_RoomStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_RoomStyle
		{
			get
			{
				return this._id_RoomStyle;
			}
			set
			{
				if ((this._id_RoomStyle != value))
				{
					if (this._RoomStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_RoomStyleChanging(value);
					this.SendPropertyChanging();
					this._id_RoomStyle = value;
					this.SendPropertyChanged("id_RoomStyle");
					this.Onid_RoomStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Service", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Service
		{
			get
			{
				return this._id_Service;
			}
			set
			{
				if ((this._id_Service != value))
				{
					if (this._Service.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_ServiceChanging(value);
					this.SendPropertyChanging();
					this._id_Service = value;
					this.SendPropertyChanged("id_Service");
					this.Onid_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Service_Count", DbType="Int NOT NULL")]
		public int Service_Count
		{
			get
			{
				return this._Service_Count;
			}
			set
			{
				if ((this._Service_Count != value))
				{
					this.OnService_CountChanging(value);
					this.SendPropertyChanging();
					this._Service_Count = value;
					this.SendPropertyChanged("Service_Count");
					this.OnService_CountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RoomStyle_RoomStyle_Service", Storage="_RoomStyle", ThisKey="id_RoomStyle", OtherKey="id_RoomStyle", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public RoomStyle RoomStyle
		{
			get
			{
				return this._RoomStyle.Entity;
			}
			set
			{
				RoomStyle previousValue = this._RoomStyle.Entity;
				if (((previousValue != value) 
							|| (this._RoomStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RoomStyle.Entity = null;
						previousValue.RoomStyle_Services.Remove(this);
					}
					this._RoomStyle.Entity = value;
					if ((value != null))
					{
						value.RoomStyle_Services.Add(this);
						this._id_RoomStyle = value.id_RoomStyle;
					}
					else
					{
						this._id_RoomStyle = default(string);
					}
					this.SendPropertyChanged("RoomStyle");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RoomStyle_Service", Storage="_Service", ThisKey="id_Service", OtherKey="id_Service", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Service Service
		{
			get
			{
				return this._Service.Entity;
			}
			set
			{
				Service previousValue = this._Service.Entity;
				if (((previousValue != value) 
							|| (this._Service.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Service.Entity = null;
						previousValue.RoomStyle_Services.Remove(this);
					}
					this._Service.Entity = value;
					if ((value != null))
					{
						value.RoomStyle_Services.Add(this);
						this._id_Service = value.id_Service;
					}
					else
					{
						this._id_Service = default(string);
					}
					this.SendPropertyChanged("Service");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Service")]
	public partial class Service : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Service;
		
		private string _Name_Service;
		
		private System.Nullable<decimal> _Price;
		
		private string _id_SeviceStyle;
		
		private EntitySet<Bill_Service> _Bill_Services;
		
		private EntitySet<RoomStyle_Service> _RoomStyle_Services;
		
		private EntityRef<ServiceStyle> _ServiceStyle;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_ServiceChanging(string value);
    partial void Onid_ServiceChanged();
    partial void OnName_ServiceChanging(string value);
    partial void OnName_ServiceChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    partial void Onid_SeviceStyleChanging(string value);
    partial void Onid_SeviceStyleChanged();
    #endregion
		
		public Service()
		{
			this._Bill_Services = new EntitySet<Bill_Service>(new Action<Bill_Service>(this.attach_Bill_Services), new Action<Bill_Service>(this.detach_Bill_Services));
			this._RoomStyle_Services = new EntitySet<RoomStyle_Service>(new Action<RoomStyle_Service>(this.attach_RoomStyle_Services), new Action<RoomStyle_Service>(this.detach_RoomStyle_Services));
			this._ServiceStyle = default(EntityRef<ServiceStyle>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Service", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Service
		{
			get
			{
				return this._id_Service;
			}
			set
			{
				if ((this._id_Service != value))
				{
					this.Onid_ServiceChanging(value);
					this.SendPropertyChanging();
					this._id_Service = value;
					this.SendPropertyChanged("id_Service");
					this.Onid_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name_Service", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string Name_Service
		{
			get
			{
				return this._Name_Service;
			}
			set
			{
				if ((this._Name_Service != value))
				{
					this.OnName_ServiceChanging(value);
					this.SendPropertyChanging();
					this._Name_Service = value;
					this.SendPropertyChanged("Name_Service");
					this.OnName_ServiceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Money")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SeviceStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string id_SeviceStyle
		{
			get
			{
				return this._id_SeviceStyle;
			}
			set
			{
				if ((this._id_SeviceStyle != value))
				{
					if (this._ServiceStyle.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_SeviceStyleChanging(value);
					this.SendPropertyChanging();
					this._id_SeviceStyle = value;
					this.SendPropertyChanged("id_SeviceStyle");
					this.Onid_SeviceStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_Bill_Service", Storage="_Bill_Services", ThisKey="id_Service", OtherKey="id_Service")]
		public EntitySet<Bill_Service> Bill_Services
		{
			get
			{
				return this._Bill_Services;
			}
			set
			{
				this._Bill_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Service_RoomStyle_Service", Storage="_RoomStyle_Services", ThisKey="id_Service", OtherKey="id_Service")]
		public EntitySet<RoomStyle_Service> RoomStyle_Services
		{
			get
			{
				return this._RoomStyle_Services;
			}
			set
			{
				this._RoomStyle_Services.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceStyle_Service", Storage="_ServiceStyle", ThisKey="id_SeviceStyle", OtherKey="id_SeviceStyle", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public ServiceStyle ServiceStyle
		{
			get
			{
				return this._ServiceStyle.Entity;
			}
			set
			{
				ServiceStyle previousValue = this._ServiceStyle.Entity;
				if (((previousValue != value) 
							|| (this._ServiceStyle.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ServiceStyle.Entity = null;
						previousValue.Services.Remove(this);
					}
					this._ServiceStyle.Entity = value;
					if ((value != null))
					{
						value.Services.Add(this);
						this._id_SeviceStyle = value.id_SeviceStyle;
					}
					else
					{
						this._id_SeviceStyle = default(string);
					}
					this.SendPropertyChanged("ServiceStyle");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bill_Services(Bill_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_Bill_Services(Bill_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
		
		private void attach_RoomStyle_Services(RoomStyle_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = this;
		}
		
		private void detach_RoomStyle_Services(RoomStyle_Service entity)
		{
			this.SendPropertyChanging();
			entity.Service = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ServiceStyle")]
	public partial class ServiceStyle : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_SeviceStyle;
		
		private string _NameStyle;
		
		private EntitySet<Service> _Services;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_SeviceStyleChanging(string value);
    partial void Onid_SeviceStyleChanged();
    partial void OnNameStyleChanging(string value);
    partial void OnNameStyleChanged();
    #endregion
		
		public ServiceStyle()
		{
			this._Services = new EntitySet<Service>(new Action<Service>(this.attach_Services), new Action<Service>(this.detach_Services));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_SeviceStyle", DbType="VarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_SeviceStyle
		{
			get
			{
				return this._id_SeviceStyle;
			}
			set
			{
				if ((this._id_SeviceStyle != value))
				{
					this.Onid_SeviceStyleChanging(value);
					this.SendPropertyChanging();
					this._id_SeviceStyle = value;
					this.SendPropertyChanged("id_SeviceStyle");
					this.Onid_SeviceStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NameStyle", DbType="NVarChar(50) NOT NULL", CanBeNull=false)]
		public string NameStyle
		{
			get
			{
				return this._NameStyle;
			}
			set
			{
				if ((this._NameStyle != value))
				{
					this.OnNameStyleChanging(value);
					this.SendPropertyChanging();
					this._NameStyle = value;
					this.SendPropertyChanged("NameStyle");
					this.OnNameStyleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ServiceStyle_Service", Storage="_Services", ThisKey="id_SeviceStyle", OtherKey="id_SeviceStyle")]
		public EntitySet<Service> Services
		{
			get
			{
				return this._Services;
			}
			set
			{
				this._Services.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceStyle = this;
		}
		
		private void detach_Services(Service entity)
		{
			this.SendPropertyChanging();
			entity.ServiceStyle = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Staff")]
	public partial class Staff : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _id_Staff;
		
		private string _name;
		
		private string _sex;
		
		private System.DateTime _birthday;
		
		private string _address;
		
		private string _phone;
		
		private string _avartar_img;
		
		private EntitySet<Bill> _Bills;
		
		private EntityRef<Account> _Account;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onid_StaffChanging(string value);
    partial void Onid_StaffChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnsexChanging(string value);
    partial void OnsexChanged();
    partial void OnbirthdayChanging(System.DateTime value);
    partial void OnbirthdayChanged();
    partial void OnaddressChanging(string value);
    partial void OnaddressChanged();
    partial void OnphoneChanging(string value);
    partial void OnphoneChanged();
    partial void Onavartar_imgChanging(string value);
    partial void Onavartar_imgChanged();
    #endregion
		
		public Staff()
		{
			this._Bills = new EntitySet<Bill>(new Action<Bill>(this.attach_Bills), new Action<Bill>(this.detach_Bills));
			this._Account = default(EntityRef<Account>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_Staff", DbType="VarChar(12) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string id_Staff
		{
			get
			{
				return this._id_Staff;
			}
			set
			{
				if ((this._id_Staff != value))
				{
					if (this._Account.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_StaffChanging(value);
					this.SendPropertyChanging();
					this._id_Staff = value;
					this.SendPropertyChanged("id_Staff");
					this.Onid_StaffChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NVarChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_sex", DbType="VarChar(20)")]
		public string sex
		{
			get
			{
				return this._sex;
			}
			set
			{
				if ((this._sex != value))
				{
					this.OnsexChanging(value);
					this.SendPropertyChanging();
					this._sex = value;
					this.SendPropertyChanged("sex");
					this.OnsexChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="Date NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="NVarChar(60) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this.OnaddressChanging(value);
					this.SendPropertyChanging();
					this._address = value;
					this.SendPropertyChanged("address");
					this.OnaddressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string phone
		{
			get
			{
				return this._phone;
			}
			set
			{
				if ((this._phone != value))
				{
					this.OnphoneChanging(value);
					this.SendPropertyChanging();
					this._phone = value;
					this.SendPropertyChanged("phone");
					this.OnphoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_avartar_img", DbType="VarChar(50)")]
		public string avartar_img
		{
			get
			{
				return this._avartar_img;
			}
			set
			{
				if ((this._avartar_img != value))
				{
					this.Onavartar_imgChanging(value);
					this.SendPropertyChanging();
					this._avartar_img = value;
					this.SendPropertyChanged("avartar_img");
					this.Onavartar_imgChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Staff_Bill", Storage="_Bills", ThisKey="id_Staff", OtherKey="id_Staff")]
		public EntitySet<Bill> Bills
		{
			get
			{
				return this._Bills;
			}
			set
			{
				this._Bills.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Account_Staff", Storage="_Account", ThisKey="id_Staff", OtherKey="username", IsForeignKey=true, DeleteOnNull=true, DeleteRule="CASCADE")]
		public Account Account
		{
			get
			{
				return this._Account.Entity;
			}
			set
			{
				Account previousValue = this._Account.Entity;
				if (((previousValue != value) 
							|| (this._Account.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Account.Entity = null;
						previousValue.Staff = null;
					}
					this._Account.Entity = value;
					if ((value != null))
					{
						value.Staff = this;
						this._id_Staff = value.username;
					}
					else
					{
						this._id_Staff = default(string);
					}
					this.SendPropertyChanged("Account");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = this;
		}
		
		private void detach_Bills(Bill entity)
		{
			this.SendPropertyChanging();
			entity.Staff = null;
		}
	}
}
#pragma warning restore 1591
